{
  "paragraphs": [
    {
      "text": "%md\n# Nijmegen Open Data\n\nSpark Notebook to get familiar with the Spark [Dataset](https://spark.apache.org/docs/latest/api/java/index.html?org/apache/spark/sql/Dataset.html) and related older `Dataframe` (now equivalent to `Dataset[Row]`) APIs, as well as the `Spark SQL` front-end with query optimizer, build on top of these APIs.\n\nWe take a tour of these options while analyzing data sets provided by Nijmegen's city council.",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h1>Nijmegen Open Data</h1>\n<p>Spark Notebook to get familiar with the Spark <a href=\"https://spark.apache.org/docs/latest/api/java/index.html?org/apache/spark/sql/Dataset.html\">Dataset</a> and related older <code>Dataframe</code> (now equivalent to <code>Dataset[Row]</code>) APIs, as well as the <code>Spark SQL</code> front-end with query optimizer, build on top of these APIs.</p>\n<p>We take a tour of these options while analyzing data sets provided by Nijmegen&rsquo;s city council.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741288_191237910",
      "id": "20210330-081526_703057744",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:58"
    },
    {
      "text": "%md\n## Nijmegen data\n\nThe city of Nijmegen provides a variety of resources as open data at\n[opendata.nijmegen.nl](https://opendata.nijmegen.nl/).\n\nOur goal is to mix and match these together, exploring the information that is implicit in the way the city is organized in quarters.\n\nSpecifically, we will integrate the following two data sets:\n\n+ Streetnames and their quarters: \n++ _we use an older version, not available through portal anymore_, use the `wget` command as follows:\n   `wget https://raw.githubusercontent.com/rubigdata/course/gh-pages/data/BAG_ADRES.csv`\n+ Public artworks from [Kunst op Straat](https://www.nijmegen.nl/kos) available as [open data](https://www.nijmegen.nl/kos/opendata/)\n\nThe notebook contains code to get you started in the analysis, so you can pick up Spark by example and refresh your SQL.\nTo fully understand everything, you will need the [Spark SQL documentation](http://spark.apache.org/docs/latest/sql-programming-guide.html).\n\nHints of interesting things to discuss in the blog for assignment 3 start with  _**Q:**_.",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Nijmegen data</h2>\n<p>The city of Nijmegen provides a variety of resources as open data at<br />\n<a href=\"https://opendata.nijmegen.nl/\">opendata.nijmegen.nl</a>.</p>\n<p>Our goal is to mix and match these together, exploring the information that is implicit in the way the city is organized in quarters.</p>\n<p>Specifically, we will integrate the following two data sets:</p>\n<ul>\n<li>Streetnames and their quarters:<br />\n++ <em>we use an older version, not available through portal anymore</em>, use the <code>wget</code> command as follows:<br />\n<code>wget https://raw.githubusercontent.com/rubigdata/course/gh-pages/data/BAG_ADRES.csv</code></li>\n<li>Public artworks from <a href=\"https://www.nijmegen.nl/kos\">Kunst op Straat</a> available as <a href=\"https://www.nijmegen.nl/kos/opendata/\">open data</a></li>\n</ul>\n<p>The notebook contains code to get you started in the analysis, so you can pick up Spark by example and refresh your SQL.<br />\nTo fully understand everything, you will need the <a href=\"http://spark.apache.org/docs/latest/sql-programming-guide.html\">Spark SQL documentation</a>.</p>\n<p>Hints of interesting things to discuss in the blog for assignment 3 start with  <em><strong>Q:</strong></em>.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741288_1857071707",
      "id": "20210330-081526_1398494719",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:59"
    },
    {
      "text": "%md\n### Preamble\n\nWe put the datasets on the container using a `shell` cell (guarded with a test on file existence (`[ ! -f ... ]`) to avoid downloading it multiple times when you rerun the same cell by accident), and then import the SQL types that we will need later on.",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Preamble</h3>\n<p>We put the datasets on the container using a <code>shell</code> cell (guarded with a test on file existence (<code>[ ! -f ... ]</code>) to avoid downloading it multiple times when you rerun the same cell by accident), and then import the SQL types that we will need later on.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741289_1614300533",
      "id": "20210330-081526_1919037565",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:60"
    },
    {
      "text": "%sh\nmkdir -p /opt/hadoop/share/data\ncd /opt/hadoop/share/data\npwd\necho BAG data...\n[ ! -f BAG_ADRES.csv ] \\\n  && wget --quiet https://rubigdata.github.io/course/data/BAG_ADRES.csv \\\n  && echo Downloaded BAG data || echo BAG data already exists\necho Artworks data...\n[ ! -f kunstopstraat-kunstwerk.csv ] \\\n  && wget --quiet -O kunstopstraat-kunstwerk.csv https://www.nijmegen.nl/kos/opendata/ \\\n  && echo Downloaded artworks data || echo Artworks file already exists",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:17:21+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sh",
        "fontSize": 9,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "/opt/hadoop/share/data\nBAG data...\nDownloaded BAG data\nArtworks data...\nDownloaded artworks data\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741289_2081873439",
      "id": "paragraph_1617637907870_822946920",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:17:21+0000",
      "dateFinished": "2021-04-21T11:17:27+0000",
      "status": "FINISHED",
      "$$hashKey": "object:61"
    },
    {
      "text": "%spark\nimport org.apache.spark.sql.types._ ",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:17:41+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.sql.types._\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741289_1340605254",
      "id": "20210330-081526_2041446038",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:17:41+0000",
      "dateFinished": "2021-04-21T11:17:59+0000",
      "status": "FINISHED",
      "$$hashKey": "object:62"
    },
    {
      "text": "%md\n## Addresses and Quarters\n\nWe start with the so-called BAG (_basisadministratie adressen en gebouwen_, i.e., records of addresses and buildings), a standardized resource for which the definition is managed at the national level.\n\nLike most data, the BAG is distributed as CSV, Comma-Separated-Values. Just using `split` may work on very small datasets with regular data, but as soon as quoted values contain commas, we would get in trouble. Apache Spark comes with support to parse various data formats, including CSV and JSON, so let us use the standard interfaces.",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Addresses and Quarters</h2>\n<p>We start with the so-called BAG (<em>basisadministratie adressen en gebouwen</em>, i.e., records of addresses and buildings), a standardized resource for which the definition is managed at the national level.</p>\n<p>Like most data, the BAG is distributed as CSV, Comma-Separated-Values. Just using <code>split</code> may work on very small datasets with regular data, but as soon as quoted values contain commas, we would get in trouble. Apache Spark comes with support to parse various data formats, including CSV and JSON, so let us use the standard interfaces.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741289_679663122",
      "id": "20210330-081526_1782817065",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:63"
    },
    {
      "text": "%spark\nval bagdata = spark.read.format(\"csv\").option(\"header\", true).load(\"file:///opt/hadoop/share/data/BAG_ADRES.csv\").cache()",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:18:21+0000",
      "progress": 100,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mbagdata\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [ACTCODE: string, ADRES_ID: string ... 18 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=0",
              "$$hashKey": "object:1673"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741290_1051450268",
      "id": "20210330-081526_438821911",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:18:21+0000",
      "dateFinished": "2021-04-21T11:18:26+0000",
      "status": "FINISHED",
      "$$hashKey": "object:64"
    },
    {
      "text": "%spark\n// Get an impression of the data, easily!\nbagdata.printSchema\nbagdata.show(2)",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:18:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- ACTCODE: string (nullable = true)\n |-- ADRES_ID: string (nullable = true)\n |-- ADR_ADRESNR: string (nullable = true)\n |-- HUISLETTER: string (nullable = true)\n |-- HUISNUMMER: string (nullable = true)\n |-- HUISNUMMERTOEVOEGING: string (nullable = true)\n |-- OPENBARERUIMTE_ID: string (nullable = true)\n |-- POSTK_A: string (nullable = true)\n |-- POSTK_N: string (nullable = true)\n |-- STADSDEEL: string (nullable = true)\n |-- STATUS: string (nullable = true)\n |-- STRAAT: string (nullable = true)\n |-- STRAAT_OFF: string (nullable = true)\n |-- STRAAT_OFF_D: string (nullable = true)\n |-- VOLGNR: string (nullable = true)\n |-- WIJKCODE: string (nullable = true)\n |-- WIJK_OMS: string (nullable = true)\n |-- WOONPLAATS: string (nullable = true)\n |-- X_COORD: string (nullable = true)\n |-- Y_COORD: string (nullable = true)\n\n+-------+----------------+-----------+----------+----------+--------------------+-----------------+-------+-------+-------------+--------------------+--------------------+--------------------+--------------------+------+--------+----------+----------+--------------------+--------------------+\n|ACTCODE|        ADRES_ID|ADR_ADRESNR|HUISLETTER|HUISNUMMER|HUISNUMMERTOEVOEGING|OPENBARERUIMTE_ID|POSTK_A|POSTK_N|    STADSDEEL|              STATUS|              STRAAT|          STRAAT_OFF|        STRAAT_OFF_D|VOLGNR|WIJKCODE|  WIJK_OMS|WOONPLAATS|             X_COORD|             Y_COORD|\n+-------+----------------+-----------+----------+----------+--------------------+-----------------+-------+-------+-------------+--------------------+--------------------+--------------------+--------------------+------+--------+----------+----------+--------------------+--------------------+\n|      A|0268200000097065|       null|      null|         9|                 A25| 0268300000001013|     AS|   6522|Nijmegen-Oost|Naamgeving uitgeg...|Dr. Claas Noordui...|Dr. Claas Noordui...|Dr. Claas Noordui...|     2|      05|Hunnerberg|  Nijmegen|188670,9299999999...|428403,1699999999...|\n|      A|0268200000097064|       null|      null|         9|                 A24| 0268300000001013|     AS|   6522|Nijmegen-Oost|Naamgeving uitgeg...|Dr. Claas Noordui...|Dr. Claas Noordui...|Dr. Claas Noordui...|     2|      05|Hunnerberg|  Nijmegen|188679,6000000000...|428375,0999999999...|\n+-------+----------------+-----------+----------+----------+--------------------+-----------------+-------+-------+-------------+--------------------+--------------------+--------------------+--------------------+------+--------+----------+----------+--------------------+--------------------+\nonly showing top 2 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=1",
              "$$hashKey": "object:1719"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741290_1334586028",
      "id": "20210330-081526_1612788265",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:18:42+0000",
      "dateFinished": "2021-04-21T11:18:44+0000",
      "status": "FINISHED",
      "$$hashKey": "object:65"
    },
    {
      "text": "%md\n### Real-life data\n\nDataFrames are very handy to get a quick impression of the data, e.g., using `show()`, `sample()` and `describe()`.",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Real-life data</h3>\n<p>DataFrames are very handy to get a quick impression of the data, e.g., using <code>show()</code>, <code>sample()</code> and <code>describe()</code>.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741290_766351032",
      "id": "20210330-081526_1917285782",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:66"
    },
    {
      "text": "%spark\nval addrDF = bagdata.select('STRAAT, 'X_COORD, 'Y_COORD, 'WIJK_OMS)",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:20:17+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34maddrDF\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [STRAAT: string, X_COORD: string ... 2 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741290_1563475206",
      "id": "20210330-081526_395441792",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:20:17+0000",
      "dateFinished": "2021-04-21T11:20:17+0000",
      "status": "FINISHED",
      "$$hashKey": "object:67"
    },
    {
      "text": "%spark\n// Show 5 rows, without truncating values\naddrDF.show(5, false)",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:20:48+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------------------------+----------------------+----------------------+----------+\n|STRAAT                   |X_COORD               |Y_COORD               |WIJK_OMS  |\n+-------------------------+----------------------+----------------------+----------+\n|Dr. Claas Noorduijnstraat|188670,929999999990000|428403,169999999980000|Hunnerberg|\n|Dr. Claas Noorduijnstraat|188679,600000000010000|428375,099999999980000|Hunnerberg|\n|Dr. Claas Noorduijnstraat|188685,730000000010000|428373,049999999990000|Hunnerberg|\n|Dr. Claas Noorduijnstraat|188692,359999999990000|428389,729999999980000|Hunnerberg|\n|Dr. Claas Noorduijnstraat|188699,679999999990000|428403,510000000010000|Hunnerberg|\n+-------------------------+----------------------+----------------------+----------+\nonly showing top 5 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=2",
              "$$hashKey": "object:1845"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741290_1736719301",
      "id": "20210330-081526_818441001",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:20:48+0000",
      "dateFinished": "2021-04-21T11:20:48+0000",
      "status": "FINISHED",
      "$$hashKey": "object:68"
    },
    {
      "text": "%spark\n// Describe statistics of the value distribution\naddrDF.describe().show()",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:20:54+0000",
      "progress": 80,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+--------------------+--------------------+--------------------+----------+\n|summary|              STRAAT|             X_COORD|             Y_COORD|  WIJK_OMS|\n+-------+--------------------+--------------------+--------------------+----------+\n|  count|               96867|               96822|               96822|     96867|\n|   mean|                null|                null|                null|      null|\n| stddev|                null|                null|                null|      null|\n|    min|'s-Gravensandestraat|180685,8800000000...|423047,7700000000...|  't Acker|\n|    max|         �vilastraat|190871,2500000000...|433955,6200000000...|Zwanenveld|\n+-------+--------------------+--------------------+--------------------+----------+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=3",
              "$$hashKey": "object:1891"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741290_143158576",
      "id": "20210330-081526_1071776208",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:20:54+0000",
      "dateFinished": "2021-04-21T11:20:58+0000",
      "status": "FINISHED",
      "$$hashKey": "object:69"
    },
    {
      "text": "%md\nHmmm...\n\nIf you think a bit longer about the reported statistics, you realize that not all the data is equally well formatted - the data dump contains address records without x and/or y coordinates; which you can validate as follows:",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Hmmm&hellip;</p>\n<p>If you think a bit longer about the reported statistics, you realize that not all the data is equally well formatted - the data dump contains address records without x and/or y coordinates; which you can validate as follows:</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741290_514509570",
      "id": "20210330-081526_483259314",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:70"
    },
    {
      "text": "%spark\naddrDF.filter( $\"X_COORD\".isNull ).count",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:21:19+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mres4\u001b[0m: \u001b[1m\u001b[32mLong\u001b[0m = 45\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=4",
              "$$hashKey": "object:1977"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741290_1400259855",
      "id": "20210330-081526_82850653",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:21:19+0000",
      "dateFinished": "2021-04-21T11:21:20+0000",
      "status": "FINISHED",
      "$$hashKey": "object:71"
    },
    {
      "text": "%md\n_What about those missing values?_\n\nHow to proceed is a decision that the data scientist needs to take - that is, it will be up to your judgement. Can we proceed without these records? In this case, the inconsistent records concern only a very small fraction of the data (45 out of almost 100K records), and we might decide to simply ignore these without valid `(x,y)` coordinates.\n\nIn many real life situations, however, we would need to invest more effort and clean the data to overcome these deficiencies. If you look into examples of records without coordinates (_Q: can you write the small numbers of lines of code to inspect these records?_), you find that some of these records have a value \"Niet authentiek\" in field STATUS, whereas almost all records have \"Naamgeving uitgegeven\". We lack the domain knowledge to understand the details of this labelling, and may need to dig deeper, or even have a chat with the owners of the data to learn how these values are assigned.",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p><em>What about those missing values?</em></p>\n<p>How to proceed is a decision that the data scientist needs to take - that is, it will be up to your judgement. Can we proceed without these records? In this case, the inconsistent records concern only a very small fraction of the data (45 out of almost 100K records), and we might decide to simply ignore these without valid <code>(x,y)</code> coordinates.</p>\n<p>In many real life situations, however, we would need to invest more effort and clean the data to overcome these deficiencies. If you look into examples of records without coordinates (<em>Q: can you write the small numbers of lines of code to inspect these records?</em>), you find that some of these records have a value &ldquo;Niet authentiek&rdquo; in field STATUS, whereas almost all records have &ldquo;Naamgeving uitgegeven&rdquo;. We lack the domain knowledge to understand the details of this labelling, and may need to dig deeper, or even have a chat with the owners of the data to learn how these values are assigned.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741291_440354978",
      "id": "20210330-081526_1997705673",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:72"
    },
    {
      "text": "%spark\n// Cell left empty for you to identify the records with missing coordinates\naddrDF.filter($\"X_COORD\".isNull).show()",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:27:57+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------------+-------+-------+------------+\n|              STRAAT|X_COORD|Y_COORD|    WIJK_OMS|\n+--------------------+-------+-------+------------+\n|        Tooropstraat|   null|   null|     Altrade|\n|          Plein 1944|   null|   null|Stadscentrum|\n|van Schevichavens...|   null|   null|Stadscentrum|\n|      van Goorstraat|   null|   null|  Bottendaal|\n|Burghardt van den...|   null|   null|  Bottendaal|\n|Burghardt van den...|   null|   null|  Bottendaal|\n|  van den Havestraat|   null|   null|     Altrade|\n| van Langeveldstraat|   null|   null|     Altrade|\n|Professor Bromstraat|   null|   null|  Groenewoud|\n|Professor Bromstraat|   null|   null|  Groenewoud|\n|Professor Bromstraat|   null|   null|  Groenewoud|\n|      van Goorstraat|   null|   null|  Bottendaal|\n|       Beijensstraat|   null|   null|     Altrade|\n|van Oldenbarnevel...|   null|   null|  Bottendaal|\n|           Daalseweg|   null|   null|   Hengstdal|\n|           Daalseweg|   null|   null|   Hengstdal|\n|           Daalseweg|   null|   null|   Hengstdal|\n| Hugo de Grootstraat|   null|   null|  Hunnerberg|\n|   Dominicanenstraat|   null|   null|     Altrade|\n|       Roukensstraat|   null|   null|     Altrade|\n+--------------------+-------+-------+------------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=5",
              "$$hashKey": "object:2063"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741291_897967866",
      "id": "paragraph_1617788393246_1555569690",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:27:57+0000",
      "dateFinished": "2021-04-21T11:27:58+0000",
      "status": "FINISHED",
      "$$hashKey": "object:73"
    },
    {
      "text": "%md\n_Schema definition helps avoid errors in the analysis!_\n\nKeep in mind that we only discovered this anomaly in the data when we attempted to define a proper schema, and discovered that the data did not satisfy that schema. Switching from transformations over RDDs to the more structured Data Frame representation can help avoid mistakes in the analysis.\n\n**Q:** _Discuss the decisions in data selection and data cleaning that you took to complete the assignment in your blog post._",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p><em>Schema definition helps avoid errors in the analysis!</em></p>\n<p>Keep in mind that we only discovered this anomaly in the data when we attempted to define a proper schema, and discovered that the data did not satisfy that schema. Switching from transformations over RDDs to the more structured Data Frame representation can help avoid mistakes in the analysis.</p>\n<p><strong>Q:</strong> <em>Discuss the decisions in data selection and data cleaning that you took to complete the assignment in your blog post.</em></p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741291_636533042",
      "id": "paragraph_1617788346957_2120140279",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:74"
    },
    {
      "text": "%md\n### Schema: using types\n\nThe Dataset API supports a more structured interface to data by defining a `case class` to represent the data.",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Schema: using types</h3>\n<p>The Dataset API supports a more structured interface to data by defining a <code>case class</code> to represent the data.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741291_1204826291",
      "id": "20210330-081526_1784403992",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:75"
    },
    {
      "text": "%spark\ncase class Addr(street:String, quarter:String, x:Float, y:Float)",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:33:34+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "defined class Addr\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741291_1399807200",
      "id": "20210330-081526_1598837285",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:33:34+0000",
      "dateFinished": "2021-04-21T11:33:35+0000",
      "status": "FINISHED",
      "$$hashKey": "object:76"
    },
    {
      "text": "%md\nProject the desired columns onto the fields of the `case class` and convert to a so-called `dataset`:",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Project the desired columns onto the fields of the <code>case class</code> and convert to a so-called <code>dataset</code>:</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741291_141407709",
      "id": "20210330-081526_1365340201",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:77"
    },
    {
      "text": "%spark\nval addrDF = bagdata.select($\"STRAAT\" as \"street\",\n                            $\"X_COORD\".cast(FloatType) as \"x\",\n                            $\"Y_COORD\".cast(FloatType) as \"y\",\n                            $\"WIJK_OMS\" as \"quarter\").as[Addr].cache()\naddrDF.show(2)",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:33:39+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------------+----+----+----------+\n|              street|   x|   y|   quarter|\n+--------------------+----+----+----------+\n|Dr. Claas Noordui...|null|null|Hunnerberg|\n|Dr. Claas Noordui...|null|null|Hunnerberg|\n+--------------------+----+----+----------+\nonly showing top 2 rows\n\n\u001b[1m\u001b[34maddrDF\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[Addr]\u001b[0m = [street: string, x: float ... 2 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=6",
              "$$hashKey": "object:2269"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741291_1660283536",
      "id": "20210330-081526_1746813228",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:33:39+0000",
      "dateFinished": "2021-04-21T11:33:41+0000",
      "status": "FINISHED",
      "$$hashKey": "object:78"
    },
    {
      "text": "%md\n_More data cleaning:_\n\nActually, parsing the X and Y coordinates is a little messy: the data contains the X and Y coordinates in the Dutch locale, which means that they are written as 0,5 instead of 0.5.\n\nWhen parsing fails, we end up with `null` values.\n\nWe define a function to convert values where possible.",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p><em>More data cleaning:</em></p>\n<p>Actually, parsing the X and Y coordinates is a little messy: the data contains the X and Y coordinates in the Dutch locale, which means that they are written as 0,5 instead of 0.5.</p>\n<p>When parsing fails, we end up with <code>null</code> values.</p>\n<p>We define a function to convert values where possible.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741291_1330515490",
      "id": "20210330-081526_1555156783",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:79"
    },
    {
      "text": "%spark\n// Use Java's NumberFormat to parse values by their locale \nimport java.text.NumberFormat\nimport java.util.Locale\nval nf = NumberFormat.getInstance(Locale.forLanguageTag(\"nl\")); // Handle floats written as 0,05 instead of 0.05\n\ndef convToFloat(s: String): Option[Float] = {\n  try {\n    Some(nf.parse(s).floatValue)\n  } catch {\n    case e: Exception => None\n  }\n}",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:34:02+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import java.text.NumberFormat\nimport java.util.Locale\n\u001b[1m\u001b[34mnf\u001b[0m: \u001b[1m\u001b[32mjava.text.NumberFormat\u001b[0m = java.text.DecimalFormat@674dc\n\u001b[1m\u001b[34mconvToFloat\u001b[0m: \u001b[1m\u001b[32m(s: String)Option[Float]\u001b[0m\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741292_1066779129",
      "id": "20210330-081526_1641112550",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:34:02+0000",
      "dateFinished": "2021-04-21T11:34:02+0000",
      "status": "FINISHED",
      "$$hashKey": "object:80"
    },
    {
      "text": "%md\nSo what does this actually do? Well, here is an example of using the new `toFloat` class on _some_ data with one clear exception:",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>So what does this actually do? Well, here is an example of using the new <code>toFloat</code> class on <em>some</em> data with one clear exception:</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741292_1652992745",
      "id": "20210330-081526_996911053",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:81"
    },
    {
      "text": "%spark\nSeq( \"0.045\", \"0,054\", \"abc\", \"45.789,34\" ).map( x => convToFloat(x).getOrElse(null))",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:34:06+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mres7\u001b[0m: \u001b[1m\u001b[32mSeq[Any]\u001b[0m = List(45.0, 0.054, null, 45789.34)\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741292_157379135",
      "id": "20210330-081526_568755885",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:34:06+0000",
      "dateFinished": "2021-04-21T11:34:06+0000",
      "status": "FINISHED",
      "$$hashKey": "object:82"
    },
    {
      "text": "%md\nRegister the function as a _user-defined function_ so it can be used in Spark SQL:",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Register the function as a <em>user-defined function</em> so it can be used in Spark SQL:</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741292_859185919",
      "id": "20210330-081526_1945959689",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:83"
    },
    {
      "text": "%spark\n// Registering a user-defined function that handles null values as well\nval tfloat = udf((f: String) => convToFloat(f).getOrElse(0f))\n\n// Apply the transformation to the x and y columns\nval addrDF = bagdata.select($\"STRAAT\" as \"street\",\n                            tfloat($\"X_COORD\").cast(FloatType) as \"x\",\n                            tfloat($\"Y_COORD\").cast(FloatType) as \"y\",\n                            $\"WIJK_OMS\" as \"quarter\").as[Addr].cache()\naddrDF.show(2)",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:34:11+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------------+---------+---------+----------+\n|              street|        x|        y|   quarter|\n+--------------------+---------+---------+----------+\n|Dr. Claas Noordui...|188670.94|428403.16|Hunnerberg|\n|Dr. Claas Noordui...| 188679.6| 428375.1|Hunnerberg|\n+--------------------+---------+---------+----------+\nonly showing top 2 rows\n\n\u001b[1m\u001b[34mtfloat\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.expressions.UserDefinedFunction\u001b[0m = SparkUserDefinedFunction($Lambda$4338/411819977@75fd5ceb,FloatType,List(Some(class[value[0]: string])),Some(class[value[0]: float]),None,false,true)\n\u001b[1m\u001b[34maddrDF\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[Addr]\u001b[0m = [street: string, x: float ... 2 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=7",
              "$$hashKey": "object:2515"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741292_1657782213",
      "id": "20210330-081526_425230019",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:34:11+0000",
      "dateFinished": "2021-04-21T11:34:13+0000",
      "status": "FINISHED",
      "$$hashKey": "object:84"
    },
    {
      "text": "%md\nLet's check that the missing values have been placed on the origin:",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Let&rsquo;s check that the missing values have been placed on the origin:</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741292_1004963015",
      "id": "20210330-081526_2146170858",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:85"
    },
    {
      "text": "%spark\nprintf(\n  \"%d points at origin, %d null values\",\n  addrDF.filter(\"x = 0 or y = 0\").count,\n  addrDF.filter('x.isNull or 'y.isNull).count\n)",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:34:20+0000",
      "progress": 20,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "45 points at origin, 0 null values"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=8",
              "$$hashKey": "object:2601"
            },
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=9",
              "$$hashKey": "object:2602"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741292_1736403521",
      "id": "20210330-081526_1781384532",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:34:20+0000",
      "dateFinished": "2021-04-21T11:34:21+0000",
      "status": "FINISHED",
      "$$hashKey": "object:86"
    },
    {
      "text": "%md\n_Q: Did we use the Dataset or the Dataframe API in the cell above?_ \n\nWe can use `describe` to get an overview of the cleaned (well, cleaner) data; can you explain the `null` values that are still reported?",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p><em>Q: Did we use the Dataset or the Dataframe API in the cell above?</em></p>\n<p>We can use <code>describe</code> to get an overview of the cleaned (well, cleaner) data; can you explain the <code>null</code> values that are still reported?</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741292_1514430196",
      "id": "20210330-081526_2116905389",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:87"
    },
    {
      "text": "%spark\naddrDF.describe().show() // Note: describe() returns a dataframe, to which we apply the show() command",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:34:30+0000",
      "progress": 80,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+--------------------+------------------+-----------------+----------+\n|summary|              street|                 x|                y|   quarter|\n+-------+--------------------+------------------+-----------------+----------+\n|  count|               96867|             96867|            96867|     96867|\n|   mean|                null|186127.98527491302|426885.0503964198|      null|\n| stddev|                null| 4458.416082436173|9399.084321173365|      null|\n|    min|'s-Gravensandestraat|               0.0|              0.0|  't Acker|\n|    max|         �vilastraat|         190871.25|        433955.62|Zwanenveld|\n+-------+--------------------+------------------+-----------------+----------+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=10",
              "$$hashKey": "object:2692"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741293_800576719",
      "id": "20210330-081526_618245837",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:34:30+0000",
      "dateFinished": "2021-04-21T11:34:32+0000",
      "status": "FINISHED",
      "$$hashKey": "object:88"
    },
    {
      "text": "%md\n### Using Data Frame Operators",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Using Data Frame Operators</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741293_626578566",
      "id": "20210330-081526_78469403",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:89"
    },
    {
      "text": "%spark\nval qc_1 = addrDF.groupBy(\"quarter\").count.cache()",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:35:10+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mqc_1\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [quarter: string, count: bigint]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741293_1591736172",
      "id": "20210330-081526_11418559",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:35:10+0000",
      "dateFinished": "2021-04-21T11:35:10+0000",
      "status": "FINISHED",
      "$$hashKey": "object:90"
    },
    {
      "text": "%spark\nqc_1.show(5)",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:35:12+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-----------+-----+\n|    quarter|count|\n+-----------+-----+\n|    Malvert| 1817|\n|     Hatert| 6388|\n|Kwakkenberg|  929|\n|   Aldenhof| 1504|\n|  Meijhorst| 2058|\n+-----------+-----+\nonly showing top 5 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=11",
              "$$hashKey": "object:2818"
            },
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=12",
              "$$hashKey": "object:2819"
            },
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=13",
              "$$hashKey": "object:2820"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741293_2111826781",
      "id": "20210330-081526_366696966",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:35:12+0000",
      "dateFinished": "2021-04-21T11:35:13+0000",
      "status": "FINISHED",
      "$$hashKey": "object:91"
    },
    {
      "text": "%md\nWhat are the top 10 largest quarters of Nijmegen?",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>What are the top 10 largest quarters of Nijmegen?</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741293_1853856499",
      "id": "20210330-081526_2090676662",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:92"
    },
    {
      "text": "%spark\nval qc_1_top = qc_1.orderBy(col(\"count\").desc).limit(10)\nqc_1_top.show()",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:35:16+0000",
      "progress": 79,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------+-----+\n|       quarter|count|\n+--------------+-----+\n|  Stadscentrum| 6473|\n|        Hatert| 6388|\n|        Biezen| 4945|\n|Neerbosch-Oost| 4415|\n|          Lent| 4333|\n|     Hengstdal| 3871|\n|      Heseveld| 3559|\n|    Galgenveld| 3510|\n|       Altrade| 3275|\n|     Grootstal| 3079|\n+--------------+-----+\n\n\u001b[1m\u001b[34mqc_1_top\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [quarter: string, count: bigint]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=14",
              "$$hashKey": "object:2914"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741293_732080998",
      "id": "20210330-081526_311872191",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:35:16+0000",
      "dateFinished": "2021-04-21T11:35:19+0000",
      "status": "FINISHED",
      "$$hashKey": "object:93"
    },
    {
      "text": "%md\nWondering what happens inside? \n\nThe `explain` operator gives you the _physical_ query plan. If you add a boolean, you also see the logical plans, both the initial as parsed, and the plan that is the result of query optimization.\n\n_It is okay if you do not fully understand the full query plan - but do try for a minute or so. Can you recognize the correspondences between operators in the logical and physical plan?_",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Wondering what happens inside?</p>\n<p>The <code>explain</code> operator gives you the <em>physical</em> query plan. If you add a boolean, you also see the logical plans, both the initial as parsed, and the plan that is the result of query optimization.</p>\n<p><em>It is okay if you do not fully understand the full query plan - but do try for a minute or so. Can you recognize the correspondences between operators in the logical and physical plan?</em></p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741293_2106480294",
      "id": "20210330-081526_1670670481",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:94"
    },
    {
      "text": "%spark\nprintln(\"Group by and count:\")\nprintln(\"===================\")\nqc_1.explain(true)",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:35:30+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Group by and count:\n===================\n== Parsed Logical Plan ==\nAggregate [quarter#3166], [quarter#3166, count(1) AS count#4257L]\n+- Project [STRAAT#27 AS street#3163, cast(UDF(X_COORD#34) as float) AS x#3164, cast(UDF(Y_COORD#35) as float) AS y#3165, WIJK_OMS#32 AS quarter#3166]\n   +- Relation[ACTCODE#16,ADRES_ID#17,ADR_ADRESNR#18,HUISLETTER#19,HUISNUMMER#20,HUISNUMMERTOEVOEGING#21,OPENBARERUIMTE_ID#22,POSTK_A#23,POSTK_N#24,STADSDEEL#25,STATUS#26,STRAAT#27,STRAAT_OFF#28,STRAAT_OFF_D#29,VOLGNR#30,WIJKCODE#31,WIJK_OMS#32,WOONPLAATS#33,X_COORD#34,Y_COORD#35] csv\n\n== Analyzed Logical Plan ==\nquarter: string, count: bigint\nAggregate [quarter#3166], [quarter#3166, count(1) AS count#4257L]\n+- Project [STRAAT#27 AS street#3163, cast(UDF(X_COORD#34) as float) AS x#3164, cast(UDF(Y_COORD#35) as float) AS y#3165, WIJK_OMS#32 AS quarter#3166]\n   +- Relation[ACTCODE#16,ADRES_ID#17,ADR_ADRESNR#18,HUISLETTER#19,HUISNUMMER#20,HUISNUMMERTOEVOEGING#21,OPENBARERUIMTE_ID#22,POSTK_A#23,POSTK_N#24,STADSDEEL#25,STATUS#26,STRAAT#27,STRAAT_OFF#28,STRAAT_OFF_D#29,VOLGNR#30,WIJKCODE#31,WIJK_OMS#32,WOONPLAATS#33,X_COORD#34,Y_COORD#35] csv\n\n== Optimized Logical Plan ==\nInMemoryRelation [quarter#3166, count#4257L], StorageLevel(disk, memory, deserialized, 1 replicas)\n   +- *(2) HashAggregate(keys=[quarter#3166], functions=[count(1)], output=[quarter#3166, count#4257L])\n      +- Exchange hashpartitioning(quarter#3166, 200), ENSURE_REQUIREMENTS, [id=#198]\n         +- *(1) HashAggregate(keys=[quarter#3166], functions=[partial_count(1)], output=[quarter#3166, count#4321L])\n            +- InMemoryTableScan [quarter#3166]\n                  +- InMemoryRelation [street#3163, x#3164, y#3165, quarter#3166], StorageLevel(disk, memory, deserialized, 1 replicas)\n                        +- *(1) Project [STRAAT#27 AS street#3163, UDF(X_COORD#34) AS x#3164, UDF(Y_COORD#35) AS y#3165, WIJK_OMS#32 AS quarter#3166]\n                           +- InMemoryTableScan [STRAAT#27, WIJK_OMS#32, X_COORD#34, Y_COORD#35]\n                                 +- InMemoryRelation [ACTCODE#16, ADRES_ID#17, ADR_ADRESNR#18, HUISLETTER#19, HUISNUMMER#20, HUISNUMMERTOEVOEGING#21, OPENBARERUIMTE_ID#22, POSTK_A#23, POSTK_N#24, STADSDEEL#25, STATUS#26, STRAAT#27, STRAAT_OFF#28, STRAAT_OFF_D#29, VOLGNR#30, WIJKCODE#31, WIJK_OMS#32, WOONPLAATS#33, X_COORD#34, Y_COORD#35], StorageLevel(disk, memory, deserialized, 1 replicas)\n                                       +- FileScan csv [ACTCODE#16,ADRES_ID#17,ADR_ADRESNR#18,HUISLETTER#19,HUISNUMMER#20,HUISNUMMERTOEVOEGING#21,OPENBARERUIMTE_ID#22,POSTK_A#23,POSTK_N#24,STADSDEEL#25,STATUS#26,STRAAT#27,STRAAT_OFF#28,STRAAT_OFF_D#29,VOLGNR#30,WIJKCODE#31,WIJK_OMS#32,WOONPLAATS#33,X_COORD#34,Y_COORD#35] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[file:/opt/hadoop/share/data/BAG_ADRES.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ACTCODE:string,ADRES_ID:string,ADR_ADRESNR:string,HUISLETTER:string,HUISNUMMER:string,HUIS...\n\n== Physical Plan ==\nInMemoryTableScan [quarter#3166, count#4257L]\n   +- InMemoryRelation [quarter#3166, count#4257L], StorageLevel(disk, memory, deserialized, 1 replicas)\n         +- *(2) HashAggregate(keys=[quarter#3166], functions=[count(1)], output=[quarter#3166, count#4257L])\n            +- Exchange hashpartitioning(quarter#3166, 200), ENSURE_REQUIREMENTS, [id=#198]\n               +- *(1) HashAggregate(keys=[quarter#3166], functions=[partial_count(1)], output=[quarter#3166, count#4321L])\n                  +- InMemoryTableScan [quarter#3166]\n                        +- InMemoryRelation [street#3163, x#3164, y#3165, quarter#3166], StorageLevel(disk, memory, deserialized, 1 replicas)\n                              +- *(1) Project [STRAAT#27 AS street#3163, UDF(X_COORD#34) AS x#3164, UDF(Y_COORD#35) AS y#3165, WIJK_OMS#32 AS quarter#3166]\n                                 +- InMemoryTableScan [STRAAT#27, WIJK_OMS#32, X_COORD#34, Y_COORD#35]\n                                       +- InMemoryRelation [ACTCODE#16, ADRES_ID#17, ADR_ADRESNR#18, HUISLETTER#19, HUISNUMMER#20, HUISNUMMERTOEVOEGING#21, OPENBARERUIMTE_ID#22, POSTK_A#23, POSTK_N#24, STADSDEEL#25, STATUS#26, STRAAT#27, STRAAT_OFF#28, STRAAT_OFF_D#29, VOLGNR#30, WIJKCODE#31, WIJK_OMS#32, WOONPLAATS#33, X_COORD#34, Y_COORD#35], StorageLevel(disk, memory, deserialized, 1 replicas)\n                                             +- FileScan csv [ACTCODE#16,ADRES_ID#17,ADR_ADRESNR#18,HUISLETTER#19,HUISNUMMER#20,HUISNUMMERTOEVOEGING#21,OPENBARERUIMTE_ID#22,POSTK_A#23,POSTK_N#24,STADSDEEL#25,STATUS#26,STRAAT#27,STRAAT_OFF#28,STRAAT_OFF_D#29,VOLGNR#30,WIJKCODE#31,WIJK_OMS#32,WOONPLAATS#33,X_COORD#34,Y_COORD#35] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[file:/opt/hadoop/share/data/BAG_ADRES.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ACTCODE:string,ADRES_ID:string,ADR_ADRESNR:string,HUISLETTER:string,HUISNUMMER:string,HUIS...\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741293_1905857339",
      "id": "20210330-081526_743445903",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:35:30+0000",
      "dateFinished": "2021-04-21T11:35:30+0000",
      "status": "FINISHED",
      "$$hashKey": "object:95"
    },
    {
      "text": "%spark\nprintln(\"Order descending limit 10:\")\nprintln(\"==========================\")\nqc_1_top.explain(true)",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:35:34+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Order descending limit 10:\n==========================\n== Parsed Logical Plan ==\nGlobalLimit 10\n+- LocalLimit 10\n   +- Sort [count#4257L DESC NULLS LAST], true\n      +- Aggregate [quarter#3166], [quarter#3166, count(1) AS count#4257L]\n         +- Project [STRAAT#27 AS street#3163, cast(UDF(X_COORD#34) as float) AS x#3164, cast(UDF(Y_COORD#35) as float) AS y#3165, WIJK_OMS#32 AS quarter#3166]\n            +- Relation[ACTCODE#16,ADRES_ID#17,ADR_ADRESNR#18,HUISLETTER#19,HUISNUMMER#20,HUISNUMMERTOEVOEGING#21,OPENBARERUIMTE_ID#22,POSTK_A#23,POSTK_N#24,STADSDEEL#25,STATUS#26,STRAAT#27,STRAAT_OFF#28,STRAAT_OFF_D#29,VOLGNR#30,WIJKCODE#31,WIJK_OMS#32,WOONPLAATS#33,X_COORD#34,Y_COORD#35] csv\n\n== Analyzed Logical Plan ==\nquarter: string, count: bigint\nGlobalLimit 10\n+- LocalLimit 10\n   +- Sort [count#4257L DESC NULLS LAST], true\n      +- Aggregate [quarter#3166], [quarter#3166, count(1) AS count#4257L]\n         +- Project [STRAAT#27 AS street#3163, cast(UDF(X_COORD#34) as float) AS x#3164, cast(UDF(Y_COORD#35) as float) AS y#3165, WIJK_OMS#32 AS quarter#3166]\n            +- Relation[ACTCODE#16,ADRES_ID#17,ADR_ADRESNR#18,HUISLETTER#19,HUISNUMMER#20,HUISNUMMERTOEVOEGING#21,OPENBARERUIMTE_ID#22,POSTK_A#23,POSTK_N#24,STADSDEEL#25,STATUS#26,STRAAT#27,STRAAT_OFF#28,STRAAT_OFF_D#29,VOLGNR#30,WIJKCODE#31,WIJK_OMS#32,WOONPLAATS#33,X_COORD#34,Y_COORD#35] csv\n\n== Optimized Logical Plan ==\nGlobalLimit 10\n+- LocalLimit 10\n   +- Sort [count#4257L DESC NULLS LAST], true\n      +- InMemoryRelation [quarter#3166, count#4257L], StorageLevel(disk, memory, deserialized, 1 replicas)\n            +- *(2) HashAggregate(keys=[quarter#3166], functions=[count(1)], output=[quarter#3166, count#4257L])\n               +- Exchange hashpartitioning(quarter#3166, 200), ENSURE_REQUIREMENTS, [id=#198]\n                  +- *(1) HashAggregate(keys=[quarter#3166], functions=[partial_count(1)], output=[quarter#3166, count#4321L])\n                     +- InMemoryTableScan [quarter#3166]\n                           +- InMemoryRelation [street#3163, x#3164, y#3165, quarter#3166], StorageLevel(disk, memory, deserialized, 1 replicas)\n                                 +- *(1) Project [STRAAT#27 AS street#3163, UDF(X_COORD#34) AS x#3164, UDF(Y_COORD#35) AS y#3165, WIJK_OMS#32 AS quarter#3166]\n                                    +- InMemoryTableScan [STRAAT#27, WIJK_OMS#32, X_COORD#34, Y_COORD#35]\n                                          +- InMemoryRelation [ACTCODE#16, ADRES_ID#17, ADR_ADRESNR#18, HUISLETTER#19, HUISNUMMER#20, HUISNUMMERTOEVOEGING#21, OPENBARERUIMTE_ID#22, POSTK_A#23, POSTK_N#24, STADSDEEL#25, STATUS#26, STRAAT#27, STRAAT_OFF#28, STRAAT_OFF_D#29, VOLGNR#30, WIJKCODE#31, WIJK_OMS#32, WOONPLAATS#33, X_COORD#34, Y_COORD#35], StorageLevel(disk, memory, deserialized, 1 replicas)\n                                                +- FileScan csv [ACTCODE#16,ADRES_ID#17,ADR_ADRESNR#18,HUISLETTER#19,HUISNUMMER#20,HUISNUMMERTOEVOEGING#21,OPENBARERUIMTE_ID#22,POSTK_A#23,POSTK_N#24,STADSDEEL#25,STATUS#26,STRAAT#27,STRAAT_OFF#28,STRAAT_OFF_D#29,VOLGNR#30,WIJKCODE#31,WIJK_OMS#32,WOONPLAATS#33,X_COORD#34,Y_COORD#35] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[file:/opt/hadoop/share/data/BAG_ADRES.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ACTCODE:string,ADRES_ID:string,ADR_ADRESNR:string,HUISLETTER:string,HUISNUMMER:string,HUIS...\n\n== Physical Plan ==\nTakeOrderedAndProject(limit=10, orderBy=[count#4257L DESC NULLS LAST], output=[quarter#3166,count#4257L])\n+- InMemoryTableScan [quarter#3166, count#4257L]\n      +- InMemoryRelation [quarter#3166, count#4257L], StorageLevel(disk, memory, deserialized, 1 replicas)\n            +- *(2) HashAggregate(keys=[quarter#3166], functions=[count(1)], output=[quarter#3166, count#4257L])\n               +- Exchange hashpartitioning(quarter#3166, 200), ENSURE_REQUIREMENTS, [id=#198]\n                  +- *(1) HashAggregate(keys=[quarter#3166], functions=[partial_count(1)], output=[quarter#3166, count#4321L])\n                     +- InMemoryTableScan [quarter#3166]\n                           +- InMemoryRelation [street#3163, x#3164, y#3165, quarter#3166], StorageLevel(disk, memory, deserialized, 1 replicas)\n                                 +- *(1) Project [STRAAT#27 AS street#3163, UDF(X_COORD#34) AS x#3164, UDF(Y_COORD#35) AS y#3165, WIJK_OMS#32 AS quarter#3166]\n                                    +- InMemoryTableScan [STRAAT#27, WIJK_OMS#32, X_COORD#34, Y_COORD#35]\n                                          +- InMemoryRelation [ACTCODE#16, ADRES_ID#17, ADR_ADRESNR#18, HUISLETTER#19, HUISNUMMER#20, HUISNUMMERTOEVOEGING#21, OPENBARERUIMTE_ID#22, POSTK_A#23, POSTK_N#24, STADSDEEL#25, STATUS#26, STRAAT#27, STRAAT_OFF#28, STRAAT_OFF_D#29, VOLGNR#30, WIJKCODE#31, WIJK_OMS#32, WOONPLAATS#33, X_COORD#34, Y_COORD#35], StorageLevel(disk, memory, deserialized, 1 replicas)\n                                                +- FileScan csv [ACTCODE#16,ADRES_ID#17,ADR_ADRESNR#18,HUISLETTER#19,HUISNUMMER#20,HUISNUMMERTOEVOEGING#21,OPENBARERUIMTE_ID#22,POSTK_A#23,POSTK_N#24,STADSDEEL#25,STATUS#26,STRAAT#27,STRAAT_OFF#28,STRAAT_OFF_D#29,VOLGNR#30,WIJKCODE#31,WIJK_OMS#32,WOONPLAATS#33,X_COORD#34,Y_COORD#35] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[file:/opt/hadoop/share/data/BAG_ADRES.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ACTCODE:string,ADRES_ID:string,ADR_ADRESNR:string,HUISLETTER:string,HUISNUMMER:string,HUIS...\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741294_1033503208",
      "id": "paragraph_1617699717009_227888829",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:35:34+0000",
      "dateFinished": "2021-04-21T11:35:34+0000",
      "status": "FINISHED",
      "$$hashKey": "object:96"
    },
    {
      "text": "%md\n### Using SQL\n\nYou are not restricted to building queryplans yourself by applying operators to Data Frames; instead, you can also use the SQL interface, and, mix and match SQL querying with follow-up operations using the Data Frame API, or even convert the data back to RDDs and continue to perform analyses directly working with RDDs.\n\nUsing SQL is most convenient when queries get larger and more complicated. Consider for example the query for the 10 largest quarters:",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Using SQL</h3>\n<p>You are not restricted to building queryplans yourself by applying operators to Data Frames; instead, you can also use the SQL interface, and, mix and match SQL querying with follow-up operations using the Data Frame API, or even convert the data back to RDDs and continue to perform analyses directly working with RDDs.</p>\n<p>Using SQL is most convenient when queries get larger and more complicated. Consider for example the query for the 10 largest quarters:</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741294_501076035",
      "id": "20210330-081526_498235285",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:97"
    },
    {
      "text": "%spark\naddrDF.createOrReplaceTempView(\"addresses\")",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:37:45+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741294_1148981356",
      "id": "20210330-081526_1562526802",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:37:45+0000",
      "dateFinished": "2021-04-21T11:37:45+0000",
      "status": "FINISHED",
      "$$hashKey": "object:98"
    },
    {
      "text": "%spark\nval qc_2_top = spark.sql(\"SELECT quarter, count(quarter) AS qc FROM addresses GROUP BY quarter ORDER BY qc DESC LIMIT 10\")",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:37:49+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mqc_2_top\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [quarter: string, qc: bigint]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741294_1070290912",
      "id": "20210330-081526_1903353364",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:37:49+0000",
      "dateFinished": "2021-04-21T11:37:49+0000",
      "status": "FINISHED",
      "$$hashKey": "object:99"
    },
    {
      "text": "%spark\nqc_2_top.show",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:35:46+0000",
      "progress": 79,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------+----+\n|       quarter|  qc|\n+--------------+----+\n|  Stadscentrum|6473|\n|        Hatert|6388|\n|        Biezen|4945|\n|Neerbosch-Oost|4415|\n|          Lent|4333|\n|     Hengstdal|3871|\n|      Heseveld|3559|\n|    Galgenveld|3510|\n|       Altrade|3275|\n|     Grootstal|3079|\n+--------------+----+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=15",
              "$$hashKey": "object:3200"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741294_259928590",
      "id": "20210330-081526_1690012953",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:35:46+0000",
      "dateFinished": "2021-04-21T11:35:48+0000",
      "status": "FINISHED",
      "$$hashKey": "object:100"
    },
    {
      "text": "%md\nCompare the query plan:",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Compare the query plan:</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741294_1378078589",
      "id": "paragraph_1617789797999_1790414319",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:101"
    },
    {
      "text": "%spark\nqc_2_top.explain(true)",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:36:39+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "== Parsed Logical Plan ==\n'GlobalLimit 10\n+- 'LocalLimit 10\n   +- 'Sort ['qc DESC NULLS LAST], true\n      +- 'Aggregate ['quarter], ['quarter, 'count('quarter) AS qc#4510]\n         +- 'UnresolvedRelation [addresses], [], false\n\n== Analyzed Logical Plan ==\nquarter: string, qc: bigint\nGlobalLimit 10\n+- LocalLimit 10\n   +- Sort [qc#4510L DESC NULLS LAST], true\n      +- Aggregate [quarter#3166], [quarter#3166, count(quarter#3166) AS qc#4510L]\n         +- SubqueryAlias addresses\n            +- Project [STRAAT#27 AS street#3163, cast(UDF(X_COORD#34) as float) AS x#3164, cast(UDF(Y_COORD#35) as float) AS y#3165, WIJK_OMS#32 AS quarter#3166]\n               +- Relation[ACTCODE#16,ADRES_ID#17,ADR_ADRESNR#18,HUISLETTER#19,HUISNUMMER#20,HUISNUMMERTOEVOEGING#21,OPENBARERUIMTE_ID#22,POSTK_A#23,POSTK_N#24,STADSDEEL#25,STATUS#26,STRAAT#27,STRAAT_OFF#28,STRAAT_OFF_D#29,VOLGNR#30,WIJKCODE#31,WIJK_OMS#32,WOONPLAATS#33,X_COORD#34,Y_COORD#35] csv\n\n== Optimized Logical Plan ==\nGlobalLimit 10\n+- LocalLimit 10\n   +- Sort [qc#4510L DESC NULLS LAST], true\n      +- Aggregate [quarter#3166], [quarter#3166, count(quarter#3166) AS qc#4510L]\n         +- Project [quarter#3166]\n            +- InMemoryRelation [street#3163, x#3164, y#3165, quarter#3166], StorageLevel(disk, memory, deserialized, 1 replicas)\n                  +- *(1) Project [STRAAT#27 AS street#3163, UDF(X_COORD#34) AS x#3164, UDF(Y_COORD#35) AS y#3165, WIJK_OMS#32 AS quarter#3166]\n                     +- InMemoryTableScan [STRAAT#27, WIJK_OMS#32, X_COORD#34, Y_COORD#35]\n                           +- InMemoryRelation [ACTCODE#16, ADRES_ID#17, ADR_ADRESNR#18, HUISLETTER#19, HUISNUMMER#20, HUISNUMMERTOEVOEGING#21, OPENBARERUIMTE_ID#22, POSTK_A#23, POSTK_N#24, STADSDEEL#25, STATUS#26, STRAAT#27, STRAAT_OFF#28, STRAAT_OFF_D#29, VOLGNR#30, WIJKCODE#31, WIJK_OMS#32, WOONPLAATS#33, X_COORD#34, Y_COORD#35], StorageLevel(disk, memory, deserialized, 1 replicas)\n                                 +- FileScan csv [ACTCODE#16,ADRES_ID#17,ADR_ADRESNR#18,HUISLETTER#19,HUISNUMMER#20,HUISNUMMERTOEVOEGING#21,OPENBARERUIMTE_ID#22,POSTK_A#23,POSTK_N#24,STADSDEEL#25,STATUS#26,STRAAT#27,STRAAT_OFF#28,STRAAT_OFF_D#29,VOLGNR#30,WIJKCODE#31,WIJK_OMS#32,WOONPLAATS#33,X_COORD#34,Y_COORD#35] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[file:/opt/hadoop/share/data/BAG_ADRES.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ACTCODE:string,ADRES_ID:string,ADR_ADRESNR:string,HUISLETTER:string,HUISNUMMER:string,HUIS...\n\n== Physical Plan ==\nTakeOrderedAndProject(limit=10, orderBy=[qc#4510L DESC NULLS LAST], output=[quarter#3166,qc#4510L])\n+- *(2) HashAggregate(keys=[quarter#3166], functions=[count(quarter#3166)], output=[quarter#3166, qc#4510L])\n   +- Exchange hashpartitioning(quarter#3166, 200), ENSURE_REQUIREMENTS, [id=#292]\n      +- *(1) HashAggregate(keys=[quarter#3166], functions=[partial_count(quarter#3166)], output=[quarter#3166, count#4582L])\n         +- InMemoryTableScan [quarter#3166]\n               +- InMemoryRelation [street#3163, x#3164, y#3165, quarter#3166], StorageLevel(disk, memory, deserialized, 1 replicas)\n                     +- *(1) Project [STRAAT#27 AS street#3163, UDF(X_COORD#34) AS x#3164, UDF(Y_COORD#35) AS y#3165, WIJK_OMS#32 AS quarter#3166]\n                        +- InMemoryTableScan [STRAAT#27, WIJK_OMS#32, X_COORD#34, Y_COORD#35]\n                              +- InMemoryRelation [ACTCODE#16, ADRES_ID#17, ADR_ADRESNR#18, HUISLETTER#19, HUISNUMMER#20, HUISNUMMERTOEVOEGING#21, OPENBARERUIMTE_ID#22, POSTK_A#23, POSTK_N#24, STADSDEEL#25, STATUS#26, STRAAT#27, STRAAT_OFF#28, STRAAT_OFF_D#29, VOLGNR#30, WIJKCODE#31, WIJK_OMS#32, WOONPLAATS#33, X_COORD#34, Y_COORD#35], StorageLevel(disk, memory, deserialized, 1 replicas)\n                                    +- FileScan csv [ACTCODE#16,ADRES_ID#17,ADR_ADRESNR#18,HUISLETTER#19,HUISNUMMER#20,HUISNUMMERTOEVOEGING#21,OPENBARERUIMTE_ID#22,POSTK_A#23,POSTK_N#24,STADSDEEL#25,STATUS#26,STRAAT#27,STRAAT_OFF#28,STRAAT_OFF_D#29,VOLGNR#30,WIJKCODE#31,WIJK_OMS#32,WOONPLAATS#33,X_COORD#34,Y_COORD#35] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex[file:/opt/hadoop/share/data/BAG_ADRES.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ACTCODE:string,ADRES_ID:string,ADR_ADRESNR:string,HUISLETTER:string,HUISNUMMER:string,HUIS...\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741294_1857367286",
      "id": "20210330-081526_1782272196",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:36:39+0000",
      "dateFinished": "2021-04-21T11:36:39+0000",
      "status": "FINISHED",
      "$$hashKey": "object:102"
    },
    {
      "text": "%md\n### Artworks\n\nNow that we have the address data prepared, move on to look into the data about the artworks.\n\nLoad the data, look at the schema and global statistics, and inspect a small sample:",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Artworks</h3>\n<p>Now that we have the address data prepared, move on to look into the data about the artworks.</p>\n<p>Load the data, look at the schema and global statistics, and inspect a small sample:</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741294_1879655485",
      "id": "20210330-081526_628398341",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:103"
    },
    {
      "text": "%spark\nval kunst = spark.read\n    .format(\"csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .load(\"file:///opt/hadoop/share/data/kunstopstraat-kunstwerk.csv\").cache()",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:37:55+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mkunst\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [naam: string, bouwjaar: string ... 8 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=16",
              "$$hashKey": "object:3366"
            },
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=17",
              "$$hashKey": "object:3367"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741294_1643708891",
      "id": "20210330-081526_1116828097",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:37:55+0000",
      "dateFinished": "2021-04-21T11:37:56+0000",
      "status": "FINISHED",
      "$$hashKey": "object:104"
    },
    {
      "text": "%spark\nkunst.printSchema",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:37:58+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- naam: string (nullable = true)\n |-- bouwjaar: string (nullable = true)\n |-- kunstenaar: string (nullable = true)\n |-- locatie: string (nullable = true)\n |-- latitude: string (nullable = true)\n |-- longitude: string (nullable = true)\n |-- omschrijving: string (nullable = true)\n |-- eigendom: string (nullable = true)\n |-- bron: string (nullable = true)\n |-- url: string (nullable = true)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741295_1597606139",
      "id": "20210330-081526_1271950463",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:37:58+0000",
      "dateFinished": "2021-04-21T11:37:59+0000",
      "status": "FINISHED",
      "$$hashKey": "object:105"
    },
    {
      "text": "%spark\n// Select all the public art created before the year 2000\nval kunstwerken = kunst.select(\"naam\",\"locatie\",\"latitude\",\"longitude\",\"bouwjaar\",\"url\").where(\"bouwjaar <= 1999\")",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:38:05+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mkunstwerken\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [naam: string, locatie: string ... 4 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741295_2015539982",
      "id": "20210330-081526_1037396420",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:38:05+0000",
      "dateFinished": "2021-04-21T11:38:05+0000",
      "status": "FINISHED",
      "$$hashKey": "object:106"
    },
    {
      "text": "%spark\nkunstwerken.sample(true,0.1).show()",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:38:16+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------------+--------------------+----------+----------+--------+--------------------+\n|                naam|             locatie|  latitude| longitude|bouwjaar|                 url|\n+--------------------+--------------------+----------+----------+--------+--------------------+\n|              Reliëf|   Begijnenstraat 29|51.8485121|5.86058232|    1618|                null|\n|  Gedeputeerdenpoort|     Burchtstraat 20|51.8471012|5.86563814|    1663|http://www.nijmeg...|\n|  Gedeputeerdenpoort|     Burchtstraat 20|51.8471012|5.86563814|    1663|http://www.nijmeg...|\n|  Gedeputeerdenpoort|     Burchtstraat 20|51.8471012|5.86563814|    1663|http://www.nijmeg...|\n|Johannes van Sagu...|      Graafseweg 274|51.8342970|5.83837820|    1925|http://www.nijmeg...|\n|     Petrus Canisius|          Hunnerpark|51.8460594|5.87235564|    1927|                null|\n|Zeven medaillons ...|Burchtstraat (voo...|51.8470588|5.86582684|    1948|                null|\n|          Mariabeeld|Burchtstraat 20 (...|51.8470070|5.86601127|    1953|                null|\n|        Twee reliëfs|       Stationsplein|51.8429103|5.85306436|    1953|http://www.nijmeg...|\n|   Twee spaarvarkens|  Mariënburgsestraat|51.8452700|5.86768048|    1954|                null|\n|         Goffertbank|         Goffertpark|51.8273392|5.83132598|    1955|                null|\n|    Gevel Mariakapel|Molenstraat 37 (P...|51.8450450|5.86336479|    1959|                null|\n|Michaël met de draak|    Heemraadstraat 2|51.8122354|5.86049753|    1961|                null|\n|Ruth, die de vruc...|Graafseweg (Augus...|51.8336030|5.83661604|    1964|http://www.nijmeg...|\n|      Vrouw met kind|Cort van der Lind...| 51.805146|  5.829154|    1966|http://www.nijmeg...|\n|      Dame met stola|Nassausingel (ple...|51.8429477|5.85819385|    1966|http://www.nijmeg...|\n|Symbool van Commu...|       Mariënburg 85|51.8449298|5.86620447|    1972|                null|\n|           Sculptuur|  Stikke Hezelstraat| 51.847524|  5.862653|    1978|                null|\n|Zonder titel (bee...|     Meijhorst 70-43|51.8120561|5.80090515|    1980|http://www.nijmeg...|\n|          Zitelement|         Elzenstraat| 51.833486|  5.883667|    1981|                null|\n+--------------------+--------------------+----------+----------+--------+--------------------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=18",
              "$$hashKey": "object:3497"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741295_1575915888",
      "id": "20210330-081526_693072867",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:38:16+0000",
      "dateFinished": "2021-04-21T11:38:17+0000",
      "status": "FINISHED",
      "$$hashKey": "object:107"
    },
    {
      "text": "%md\nThe coordinates are not correctly detected as floats, so cast those explicitly:",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>The coordinates are not correctly detected as floats, so cast those explicitly:</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741295_233965319",
      "id": "20210330-081526_1696081708",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:108"
    },
    {
      "text": "%spark\nval kunstxy = kunstwerken\n  .withColumn(\"latitude\", kunstwerken.col(\"latitude\").cast(\"float\"))\n  .withColumn(\"longitude\", kunstwerken.col(\"longitude\").cast(\"float\"))",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:38:29+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mkunstxy\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [naam: string, locatie: string ... 4 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741295_1016064656",
      "id": "20210330-081526_761470052",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:38:29+0000",
      "dateFinished": "2021-04-21T11:38:29+0000",
      "status": "FINISHED",
      "$$hashKey": "object:109"
    },
    {
      "text": "%spark\nkunstxy.describe().show()",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:38:35+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+--------------------+--------------------+--------------------+--------------------+------------------+--------------------+\n|summary|                naam|             locatie|            latitude|           longitude|          bouwjaar|                 url|\n+-------+--------------------+--------------------+--------------------+--------------------+------------------+--------------------+\n|  count|                 299|                 298|                 298|                 298|               299|                 101|\n|   mean|                null|                null|  51.838693772386385|   5.855828390825515|1942.1371237458195|                null|\n| stddev|                null|                null|0.012656473967198044|0.022601939926682534|131.09824403994534|                null|\n|    min|'Vervult u met de...|Achter de Hoofdwacht|           51.800934|           5.7574415|                12|   \"de onafwendbare\"|\n|    max|     muurschildering|d'Almarasweg (Bot...|           51.871082|           5.8993073|              1999|http://www.nijmeg...|\n+-------+--------------------+--------------------+--------------------+--------------------+------------------+--------------------+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=19",
              "$$hashKey": "object:3623"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741295_1760181642",
      "id": "20210330-081526_900063662",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:38:35+0000",
      "dateFinished": "2021-04-21T11:38:36+0000",
      "status": "FINISHED",
      "$$hashKey": "object:110"
    },
    {
      "text": "%md\nLet's inspect some of the data, using global information and a sample.",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Let&rsquo;s inspect some of the data, using global information and a sample.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741295_1962547870",
      "id": "20210330-081526_1005505349",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:111"
    },
    {
      "text": "%spark\nkunstxy.sample(true,0.05).show()",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:38:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------------+--------------------+---------+---------+--------+--------------------+\n|                naam|             locatie| latitude|longitude|bouwjaar|                 url|\n+--------------------+--------------------+---------+---------+--------+--------------------+\n|Poort van het Oud...|Gebroeders van Li...| 51.84726| 5.859645|    1640|http://www.nijmeg...|\n|          Stadswapen|Hunnerpark (Belvé...|51.847477| 5.872404|    1888|http://www.nijmeg...|\n|   Vier gevelbeelden| Berg en Dalseweg 81| 51.84021| 5.878873|    1925|                null|\n|         Ruiterbeeld|       Stationsplein| 51.84214| 5.853131|    1953|                null|\n|               Clown|Balistraat/Javast...|51.834923| 5.862081|    1956|http://www.nijmeg...|\n|Meisje met schooltas|Archipelstraat/At...|51.834442| 5.865808|    1959|                null|\n|'Vervult u met de...| Wilhelminasingel 15| 51.84045| 5.864407|    1956|                null|\n|              Icarus|Hatertseweg/Slote...|51.820473| 5.846312|    1966|http://www.nijmeg...|\n|                 Uil|      Aldenhof 67-21| 51.80624| 5.798069|    1969|http://www.nijmeg...|\n|Kern, beweging en...| Barbarossastraat 35| 51.84434|  5.87771|    1976|                null|\n|Het midden en zij...|  Tolhuis 10e straat|51.818993| 5.794412|    1980|                null|\n|Plastiek van de j...|         Broekstraat| 51.83474| 5.791861|    1983|                null|\n|         Trafohuisje|Holtgesbroek 10e ...|51.829308| 5.776963|    1996|http://www.nijmeg...|\n|        Zonder titel|       Stationsplein| 51.84259| 5.853778|    1999|                null|\n|      Joods monument|Kitty de Wijzeplaats| 51.84869| 5.862491|    1995|                null|\n|Gedenksteen Jan v...|Waalbrug, pijler ...| 51.85252| 5.870856|    1945|                null|\n|'Wie bouwt er noo...|In de Betouwstraa...|  51.8438| 5.860015|    1986|                null|\n+--------------------+--------------------+---------+---------+--------+--------------------+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=20",
              "$$hashKey": "object:3709"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741295_1511980312",
      "id": "20210330-081526_1777104816",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:38:44+0000",
      "dateFinished": "2021-04-21T11:38:45+0000",
      "status": "FINISHED",
      "$$hashKey": "object:112"
    },
    {
      "text": "%md\nArtworks created during WWII:",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Artworks created during WWII:</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741295_119577582",
      "id": "20210330-081526_1307118822",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:113"
    },
    {
      "text": "%spark\nkunstxy.filter(\"bouwjaar >= 1940 and bouwjaar <= 1945\").show()",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:38:50+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------------+--------------------+---------+---------+--------+--------------------+\n|                naam|             locatie| latitude|longitude|bouwjaar|                 url|\n+--------------------+--------------------+---------+---------+--------+--------------------+\n|        Twee leeuwen|    Veerpoorttrappen|51.848396| 5.868978|    1941|http://www.nijmeg...|\n|               Kopje|Nieuwstraat (stad...| 51.84608|5.8656554|    1943|http://www.nijmeg...|\n|Gedenksteen voor ...|    Joris Ivensplein| 51.84864|5.8566613|    1945|                null|\n|Gedenksteen Jan v...|Waalbrug, pijler ...| 51.85252| 5.870856|    1945|                null|\n+--------------------+--------------------+---------+---------+--------+--------------------+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=21",
              "$$hashKey": "object:3795"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741295_1202149914",
      "id": "20210330-081526_2019338499",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:38:50+0000",
      "dateFinished": "2021-04-21T11:38:51+0000",
      "status": "FINISHED",
      "$$hashKey": "object:114"
    },
    {
      "text": "%md\nMany items have no URL information, given the difference in counts between `url` and `latitude`.\n\nLet's inspect the problematic tuples (using SQL - _\"niet omdat het moet, maar omdat het kan\"_):",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Many items have no URL information, given the difference in counts between <code>url</code> and <code>latitude</code>.</p>\n<p>Let&rsquo;s inspect the problematic tuples (using SQL - <em>&ldquo;niet omdat het moet, maar omdat het kan&rdquo;</em>):</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741296_889175350",
      "id": "20210330-081526_1065242973",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:115"
    },
    {
      "text": "%spark\nkunstxy.createOrReplaceTempView(\"kunstxy\")\n// spark.sql(\"SELECT * FROM kunstxy WHERE locatie IS NULL\").show()\nspark.sql(\"SELECT * FROM kunstxy WHERE url IS NULL LIMIT 10\").show()",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:39:10+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------------+--------------------+---------+---------+--------+----+\n|                naam|             locatie| latitude|longitude|bouwjaar| url|\n+--------------------+--------------------+---------+---------+--------+----+\n|Ingangspoort van ...|     Burchtstraat 20| 51.84708| 5.865753|    1554|null|\n|              Reliëf|   Begijnenstraat 29| 51.84851|5.8605824|    1618|null|\n|Weesjongen en wee...|   Begijnenstraat 29|  51.8485|5.8605475|    1645|null|\n|Poort Oud Burgere...|Professor Corneli...|51.833538| 5.865971|    1645|null|\n|   Vier gevelbeelden|Postweg 80 (Villa...| 51.83134| 5.878848|    1930|null|\n|Poort Roomsch Kat...|   Begijnenstraat 29|51.848743|  5.86041|    1860|null|\n|Gevelsteen met Wa...|         Waalkade 65|51.849136| 5.867189|    1861|null|\n|           Dominicus|Heyendaalseweg 12...|51.827034|5.8713107|    1880|null|\n|Spoorwegmonument ...|Hoogstraat bij Va...|51.847115|5.8688755|    1884|null|\n|Spoorwegmonument ...|Hoogstraat bij Va...|51.847115|5.8688755|    1884|null|\n+--------------------+--------------------+---------+---------+--------+----+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=22",
              "$$hashKey": "object:3881"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741296_2098641213",
      "id": "20210330-081526_980804712",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:39:10+0000",
      "dateFinished": "2021-04-21T11:39:11+0000",
      "status": "FINISHED",
      "$$hashKey": "object:116"
    },
    {
      "text": "%md\nIf you would use the data in practice, you can simply ignore the `url` column, or define a new table that excludes the NULL values.\n\nLet us however go back to the source data, in the Dataframe called `kunst`, and look into the dataset in more detail:",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>If you would use the data in practice, you can simply ignore the <code>url</code> column, or define a new table that excludes the NULL values.</p>\n<p>Let us however go back to the source data, in the Dataframe called <code>kunst</code>, and look into the dataset in more detail:</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741296_1933504005",
      "id": "20210330-081526_662460052",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:117"
    },
    {
      "text": "%spark\nkunst.createOrReplaceTempView(\"kunst\")\nkunst.describe().show()",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:39:51+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+--------------------+------------------+--------------------+--------------------+--------------------+--------------------+--------------------+-----------+--------------------+--------------------+\n|summary|                naam|          bouwjaar|          kunstenaar|             locatie|            latitude|           longitude|        omschrijving|   eigendom|                bron|                 url|\n+-------+--------------------+------------------+--------------------+--------------------+--------------------+--------------------+--------------------+-----------+--------------------+--------------------+\n|  count|                1016|               813|                 600|                 590|                 485|                 414|                 373|        121|                  27|                 116|\n|   mean|                null|2043.5258620689656|                null|                null|    51.8390915365994|   5.855305161988473|                null|       null|                null|                null|\n| stddev|                null| 867.9459417674967|                null|                null|0.013089732946058117|0.022567223157870502|                null|       null|                null|                null|\n|    min| De kazerne heett...|                  |  jarenlang een l...| Adem en Arent; d...| 'levend kunstwer...|            5.865491| Gerard Bruning e...|    Heerlen| \"de verdeelster\"...|   \"de onafwendbare\"|\n|    max|‘TER HERINNERING ...|       particulier|  www.pvandelocht.nl|      www.welwaar.nl|   www.tonycragg.com|     www.ruygrok.com|‘Hulde aan den on...|particulier|  www.vlinderkas.com|http://www.nijmeg...|\n+-------+--------------------+------------------+--------------------+--------------------+--------------------+--------------------+--------------------+-----------+--------------------+--------------------+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=23",
              "$$hashKey": "object:3967"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741296_86279820",
      "id": "20210330-081526_1028553540",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:39:51+0000",
      "dateFinished": "2021-04-21T11:39:52+0000",
      "status": "FINISHED",
      "$$hashKey": "object:118"
    },
    {
      "text": "%md\n_Inspect the summary statistics..._\n\nEven the counts of tuples with longitude values does not equal the counts with latitude values... and a mean \"bouwjaar\" in the future is, well, suspicious!\n\nLet's investigate in more detail, listing missing lat/lon and out-of-range year values in a few SQL queries.",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p><em>Inspect the summary statistics&hellip;</em></p>\n<p>Even the counts of tuples with longitude values does not equal the counts with latitude values&hellip; and a mean &ldquo;bouwjaar&rdquo; in the future is, well, suspicious!</p>\n<p>Let&rsquo;s investigate in more detail, listing missing lat/lon and out-of-range year values in a few SQL queries.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741296_424766936",
      "id": "20210330-081526_1886859529",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:119"
    },
    {
      "text": "%spark\nspark.sql(\"select * from kunst where (latitude is not null and longitude is null) or (latitude is null and longitude is not null)\").show(15)",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:41:03+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------------+--------------------+--------------------+--------------------+--------------------+--------------------+--------------------+--------+----+----+\n|                naam|            bouwjaar|          kunstenaar|             locatie|            latitude|           longitude|        omschrijving|eigendom|bron| url|\n+--------------------+--------------------+--------------------+--------------------+--------------------+--------------------+--------------------+--------+----+----+\n|De gebeeldhouwde ...| in 1554 gemaakt ...| is grotendeels a...|   gemeente Nijmegen|                null|http://www.nijmeg...|                null|    null|null|null|\n|De wegens faillis...| maar ook de natu...| afkomstig van de...| wordt ook meldin...|   gemeente Nijmegen|                null|http://www.nijmeg...|    null|null|null|\n|Wie de vier besch...| omdat vaststaat ...|         particulier|                null|http://www.nijmeg...|                null|                null|    null|null|null|\n|Voor deze poort i...| in licht vereenv...| in de tuin van h...|   gemeente Nijmegen|                null|http://www.nijmeg...|                null|    null|null|null|\n|Christian Daniël ...| de ontwerper van...| was een vooraans...|   gemeente Nijmegen|                null|http://www.nijmeg...|                null|    null|null|null|\n|Christian Daniël ...| de ontwerper van...| was een vooraans...|   gemeente Nijmegen|                null|http://www.nijmeg...|                null|    null|null|null|\n|Het monument best...| rijk versierde s...| attribuut van ma...| met de tekst ‘Ik...| gaat kinderen. G...|                null|                null|    null|null|null|\n|Tot 1949 heeft he...| in 1999 is het m...|   gemeente Nijmegen|                null|http://www.nijmeg...|                null|                null|    null|null|null|\n|De Eerste Infante...| die leefde van 1...| iets wat nog nie...| omringd door een...|      zijn grafzerk.|                null|                null|    null|null|null|\n|De Snijderskazern...| die van 1951 tot...|         particulier|                null|http://www.nijmeg...|                null|                null|    null|null|null|\n|De bank is ontwor...| de dorpsarts van...|   gemeente Nijmegen|                null|http://www.nijmeg...|                null|                null|    null|null|null|\n|De bank is ontwor...| de dorpsarts van...|   gemeente Nijmegen|                null|http://www.nijmeg...|                null|                null|    null|null|null|\n|Het beeld staat n...| vlak achter het ...|   gemeente Nijmegen|   www.noviomagus.nl|http://www.nijmeg...|                null|                null|    null|null|null|\n|Van Hoof zelf sti...| loodste hij die ...| vlak bij de spoo...| werd deze in bra...| maar tijdens een...|                null|                null|    null|null|null|\n|Omdat er twijfel ...| beleid en trouw ...|   gemeente Nijmegen|                null|http://www.nijmeg...|                null|                null|    null|null|null|\n+--------------------+--------------------+--------------------+--------------------+--------------------+--------------------+--------------------+--------+----+----+\nonly showing top 15 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=24",
              "$$hashKey": "object:4053"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741296_972797492",
      "id": "20210330-081526_537488562",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:41:03+0000",
      "dateFinished": "2021-04-21T11:41:03+0000",
      "status": "FINISHED",
      "$$hashKey": "object:120"
    },
    {
      "text": "%spark\nspark.sql(\"select * from kunst where bouwjaar > 2020\").show(10)",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:41:18+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------------+--------+--------------------+--------------------+----------+----------+--------------------+-----------------+--------------------+--------------------+\n|         naam|bouwjaar|          kunstenaar|             locatie|  latitude| longitude|        omschrijving|         eigendom|                bron|                 url|\n+-------------+--------+--------------------+--------------------+----------+----------+--------------------+-----------------+--------------------+--------------------+\n|       Object|    9999|            Onbekend|   Geert Grooteplein|51.8239293|5.86176819|Deze gespleten st...|             null|                null|                null|\n|Glazen Paneel|    9999|Montse Hernandez ...|Eikenlaan (Lent-N...|51.8676363|5.87309422|Dit kunstwerk wer...|gemeente Nijmegen|www.montsehernánd...|http://www.nijmeg...|\n|    Sculptuur|    9999|    Gerard Walraeven|Wout Wagtmanspad ...| 51.810100|  5.782957|Dit kunstwerk is ...|             null|                null|                null|\n|  Zonnewijzer|    9999|LaSalle (Albert G...|        Keplerstraat| 51.811175|  5.831423|         Zonnewijzer|gemeente Nijmegen|                null|http://www.nijmeg...|\n+-------------+--------+--------------------+--------------------+----------+----------+--------------------+-----------------+--------------------+--------------------+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=25",
              "$$hashKey": "object:4099"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741296_1254212510",
      "id": "20210330-081526_1999328596",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:41:18+0000",
      "dateFinished": "2021-04-21T11:41:18+0000",
      "status": "FINISHED",
      "$$hashKey": "object:121"
    },
    {
      "text": "%spark\nspark.sql(\"select * from kunst where bouwjaar is null\").show(10)",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:41:34+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12,
        "editorHide": false,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------------+--------+----------+-------+--------+---------+------------+--------+----+----+\n|                naam|bouwjaar|kunstenaar|locatie|latitude|longitude|omschrijving|eigendom|bron| url|\n+--------------------+--------+----------+-------+--------+---------+------------+--------+----+----+\n|Het reliëf hoort ...|    null|      null|   null|    null|     null|        null|    null|null|null|\n|In het midden van...|    null|      null|   null|    null|     null|        null|    null|null|null|\n|De volgende tekst...|    null|      null|   null|    null|     null|        null|    null|null|null|\n|Aenschouwer van t...|    null|      null|   null|    null|     null|        null|    null|null|null|\n|Wilt doch om Chri...|    null|      null|   null|    null|     null|        null|    null|null|null|\n|Gedachtlich syn g...|    null|      null|   null|    null|     null|        null|    null|null|null|\n|Want sulcx is aen...|    null|      null|   null|    null|     null|        null|    null|null|null|\n|De heilige Domini...|    null|      null|   null|    null|     null|        null|    null|null|null|\n|Victoria staat vo...|    null|      null|   null|    null|     null|        null|    null|null|null|\n|Het beeld ligt aa...|    null|      null|   null|    null|     null|        null|    null|null|null|\n+--------------------+--------+----------+-------+--------+---------+------------+--------+----+----+\nonly showing top 10 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=26",
              "$$hashKey": "object:4145"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741296_2033023736",
      "id": "20210330-081526_1491922317",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:41:34+0000",
      "dateFinished": "2021-04-21T11:41:34+0000",
      "status": "FINISHED",
      "$$hashKey": "object:122"
    },
    {
      "text": "%md\n_Think about these query results!_\n\nCan you explain the various data problems we have encountered when working on this dataset? Which are fundamental, and which are just an artifact of our processing?\n\nLet's first make a clean version of the public art dataset, and a copy of the addresses after pre-processing, so we can continue later without having to redo the data cleaning.",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "lineNumbers": false,
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "colWidth": 12,
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p><em>Think about these query results!</em></p>\n<p>Can you explain the various data problems we have encountered when working on this dataset? Which are fundamental, and which are just an artifact of our processing?</p>\n<p>Let&rsquo;s first make a clean version of the public art dataset, and a copy of the addresses after pre-processing, so we can continue later without having to redo the data cleaning.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741297_1041735937",
      "id": "paragraph_1617790361829_315391821",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:123"
    },
    {
      "text": "%spark\nspark.sql(\"select * from kunstxy where (latitude is not null and longitude is not null) and bouwjaar < 9999\")\n     .write.parquet(\"file:///opt/hadoop/share/data/kos.parquet\")\naddrDF.write.parquet(\"file:///opt/hadoop/share/data/addr.parquet\")",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:41:52+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=27",
              "$$hashKey": "object:4231"
            },
            {
              "jobUrl": "http://277fbf090e68:4040/jobs/job?id=28",
              "$$hashKey": "object:4232"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741297_725037381",
      "id": "paragraph_1617798674236_1791426673",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "dateStarted": "2021-04-21T11:41:52+0000",
      "dateFinished": "2021-04-21T11:41:54+0000",
      "status": "FINISHED",
      "$$hashKey": "object:124"
    },
    {
      "text": "%md\nFinally, we can proceed to investigate the two datasets in combination, and move on to part B of assignment 4.",
      "user": "anonymous",
      "dateUpdated": "2021-04-21T11:15:41+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>Finally, we can proceed to investigate the two datasets in combination, and move on to part B of assignment 4.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1619003741297_61324170",
      "id": "paragraph_1617798740469_1005528986",
      "dateCreated": "2021-04-21T11:15:41+0000",
      "status": "READY",
      "$$hashKey": "object:125"
    }
  ],
  "name": "A4 Part A Data Cleaning",
  "id": "2G5DQYF73",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/A4 Part A Data Cleaning"
}